Sub CommaPAUL()
' Paul Beverley - Version 19.06.19
' Makes adjacent words into comma separated


newBit = ", "
myQuotes = Chr(34) & Chr(39) & ChrW(8220) & ChrW(8216)
Selection.Collapse wdCollapseEnd
While (LCase(Selection) <> UCase(Selection))
  Selection.MoveRight 1
  DoEvents
Wend
myStart = Selection.Start
If Selection = ChrW(8217) Then myStart = myStart + 1
Do
  Selection.MoveRight 1
Loop Until LCase(Selection) <> UCase(Selection) Or Asc(Selection) = 1
myEnd = Selection.Start
Set rng = ActiveDocument.Content
rng.End = myEnd
rng.Start = myStart
wasMiddle = rng
lastChar = Right(rng, 1)
If LCase(Selection) <> Selection Then
' It needs lowercasing
  Selection.Start = Selection.Start - 1
  preChar = Selection
  Selection.MoveStart 1
  Selection.MoveEnd 1
  newLetter = LCase(Selection)
  If InStr(myQuotes, preChar) > 0 Then
    Selection.Delete
    Selection.TypeText newLetter
    Selection.End = myEnd - 1
  Else
    newBit = newBit & newLetter
  End If
  Selection.Start = myStart
Else
  If lastChar = " " And Len(rng) > 1 Then newBit = Trim(newBit)
  Selection.MoveLeft 1
End If
Selection.Start = myStart
Selection.Delete
Selection.TypeText newBit
End Sub

Function CheckURL(strURL As String) As Boolean
  Dim objDemand As Object
  Dim varResult As Variant
 
  On Error GoTo ErrorHandler
  Set objDemand = CreateObject("WinHttp.WinHttpRequest.5.1")
 
  With objDemand
    .Open "GET", strURL, False
    .Send
    varResult = .StatusText
  End With
 
  Set objDemand = Nothing
 
  If varResult = "OK" Then
    CheckURL = True
  Else
    CheckURL = False
  End If
 
ErrorHandler:
End Function


